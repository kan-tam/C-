独習C＃を読む中で疑問に思った点やポイントを列挙する。

●「int?」とは
型数の後ろに？をつけることでnullを許容する。

●識別子の書き方
キャメルケース；先頭小文字、区切り大文字　例）userName
パスカル；先頭含めて区切り大文字　例）UserName
アンダースコア：区切りをアンダースコア　例）User_Name

C＃では「変数：キャメルケース」「クラスメソッドプロパティ等：パスカル」で記載するのが一般的。

●const vs readonly


●object型って何が入る？
なんでも入る。すべての型が入る。　継承やオーバーライドにも密接に関係する。

●オーバーヘッドとは
あるコンピューターの処理を実行するのに付随する作業を指す。
処理に時間がかかるようになるなど、システムの負荷になるものを指す。


●プリプロセッサディレクティブとは
プロジェクトのソースを見ていると#if #endif　と書かれておりその中に処理が書かれていた。
これらはプリプロセッサディレクティブの一部で、コンパイラーに対する命令を表す。

#if #endifを使用することでデバッグ時のみ有効にしたいコード(リリース時には除去したいコード)を定義できる。

#region #endregionで折り畳み可能になる。おなじみのやつ。

●フィールドとは
classブロック直下で定義された変数。
変数構文とほぼ同じだが、以下の点が異なる。
・先頭に修飾子を付与できる
・varキーワードは利用できない

フィールドでは、アクセス権限によって記法を使い分ける。
・publicなフィールドはパスカル形式　※publicにするべきではない
・privateなフィールドはキャメルケース形式

フィールドには既定値が決まっている。
例えばbool型：false int型：0
→明示的に初期化しない場合は既定値が割り当てられるが、可読性の観点からいくと初期化の設定はするようにしましょう。

●クラスフィールド(クラス変数)とは
クラスフィールドはインスタンス生成せずともクラスから値を参照できる。
つまり全インスタンスに共通の情報を保持する場所として使用できる。
修飾子にstaticをつける。定数という形でクラスフィールドを使用する。
例）private static final double PI = 3.14; //円周率

●シングルトンとは
シングルトンとはデザインパターンの一種である。
クラスのインスタンスを１つしか生成したくないときに使用する。
シングルトンによって、インスタンス生成が一つであることを保証される。
あるクラスを作成するとする。
ここでコンストラクタをprivateにすることで、インスタンス生成を行えないようにする。
ではどうやってインスタンス生成するか。公開プロパティとして、Instanceを用意しておく。
インスタンス生成には、公開プロパティ経由で作成する。
公開プロパティInstanceを呼び出した時点で、privateのコンストラクタを経由するため、インスタンス生成が行える。

